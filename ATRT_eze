#sequenced cells from 10 individuals during the first trimester 
#of human development, from Carnegie stages (CS) 12 to 22 or gestational weeks 6–10. 
# https://www.nature.com/articles/s41593-020-00794-1
# https://cells-test.gi.ucsc.edu/?ds=early-brain

library(dplyr)
library(Seurat)
library(patchwork)
library(R.utils)
library(ggplot2)
require(Seurat)
require(data.table)

brain.data2 <- readRDS(file="/home/raisaa/SeuratProject2/ATRT_Eze/brain.data2.rds")

mat <- fread("/home/raisaa/SeuratProject2/exprMatrix.tsv")
meta <- data.frame(fread("/home/raisaa/SeuratProject2/ATRT_Eze/meta2.tsv"), row.names=1)
genes = mat[,1][[1]]
genes = gsub(".+[|]", "", genes)
mat = data.frame(mat[,-1], row.names=genes)
brain.data2 <- CreateSeuratObject(counts = mat, meta.data=meta)

annotations <- read.csv("/home/raisaa/SeuratProject2/ATRT_Eze/celllabels.csv")
brain.data2$Cell.Type <- annotations$Cell.Type

Cell.Type <- annotations[,"Cell.Type"]
names(Cell.Type) <- rownames(brain.data2@meta.data)
brain.data2$Cell.Type <- Cell.Type

# Set the default assay
DefaultAssay(brain.data2) <- "RNA"

# Perform quality control
brain.data2[["percent.mt"]] <- PercentageFeatureSet(brain.data2, pattern = "^MT-")

# Show QC metrics for the first 5 cells
head(brain.data2@meta.data, 5)

# Visualize QC metrics as a violin plot
eze.qc.metrics <- VlnPlot(brain.data2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3, group.by="Area")
ggsave(eze.qc.metrics, height = 14, width = 21, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_QC_Metrics.png")

# Feature scatter to visualize feature-feature relationships
FeatureScatter(brain.data2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA", group.by = "Area") + geom_smooth(method = 'lm')
plot1 <- FeatureScatter(brain.data2, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(brain.data2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
eze.featurerelationships <- plot1 + plot2 
ggsave(eze.featurerelationships, height = 14, width = 21, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_nCount_nFeature_relationship.png")

# Set cutoff parameters
brain.data2 <- subset(brain.data2, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 10)

# Normalise data
brain.data2 <- NormalizeData(brain.data2)

# Run FindVariableFeatures with the "vst" method
brain.data2 <- FindVariableFeatures(brain.data2, selection.method = "dispersion", nfeatures = 2000)

# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(brain.data2), 10)

# plot variable features with and without labels
plot1eze <- VariableFeaturePlot(brain.data2) + theme_classic()
plot2eze <- LabelPoints(plot = plot1eze, points = top10, repel = TRUE, xnudge = 0,ynudge=0) + theme_classic()
plot1plot2 <- plot_grid(plot1eze,plot2eze,nrow=1)
ggsave(plot1eze+plot2eze, height = 10, width = 10, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_VariableFeatures.png")

# Scale data prior to performing dimensionality reduction
brain.data2 <- ScaleData(brain.data2)

# perform linear dimensional reduction
brain.data2 <- RunPCA(brain.data2, features = VariableFeatures(object = brain.data2))

# Examine and visualize PCA results a few different ways
print(brain.data2[["pca"]], dims = 1:5, nfeatures = 5)

# Visualise PCA
# VizDimLoadings
eze_vizdimloadings <- VizDimLoadings(brain.data2, dims = 1:2, reduction = "pca")
ggsave(eze_vizdimloadings, height=8, width=10,file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_Vizdimloadings.png")

# DimPlot
eze_pca <- DimPlot(brain.data2, reduction = "pca", group.by = "Area")
ggsave(eze_pca, height=10,width=11,file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_PCA.png")

# Heatmap
png(file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_PCAHeatmap.png", height = 20, width = 20, units = "cm", res = 300)
DimHeatmap(brain.data2, dims = 1:9, cells = 500, balanced = TRUE)
dev.off()
graphics.off()

### Determine the ‘dimensionality’ of the dataset
eze_elbowplot <- ElbowPlot(brain.data2) + theme_classic()
ggsave(eze_elbowplot, height=7,width=8,file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_ElbowPlot.png")

# Cluster the cells
brain.data2 <- FindNeighbors(brain.data2, dims = 1:15)
brain.data2 <- FindClusters(brain.data2, resolution = 0.5)

# Look at cluster IDs of the first 5 cells
head(Idents(brain.data2), 5)

# Perform non-linear dimensional reduction
brain.data2 <- RunUMAP(brain.data2, dims = 1:10)
p1 <- DimPlot(brain.data2, reduction = "umap", label = T)
p2 <- DimPlot(brain.data2, reduction = "umap", label = T, group.by = "Area")
eze_umap <- p1+p2
ggsave(eze_umap, width = 23, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Basic Seurat/Eze_UMAP.png")

saveRDS(brain.data2, file="~/SeuratProject2/ATRT_Eze/brain.data2.rds")

#################### PROJECTION ####################
# Extract the values for the projection
DefaultAssay(object = brain.data2) <- "RNA"

# Extract the normalised count data
tpms.mat <- brain.data2[["RNA"]]@scale.data

# Install and load libraries
library("NMF")
library("MASS")

# Load required data objects
nmf.res <- readRDS(file = "/home/raisaa/SeuratProject2/nmf.res.atrt.rds")

# Load sample data as matrix object
source(file = "/home/raisaa/Group3-4App-main/StarProtocols_Guide/R/Project_NMF.R")

# Project NMF model to sequencing data
tpms.mat <- project.NMF(input.array = as.matrix(tpms.mat), nmf.result = nmf.res)

# Rows 3 in tpms.mat correspond to the ATRT metagene, extract them from the data and transpose matrix
atrt.tpms <- t(tpms.mat[c(3),]) 
metagene_num <- 3
atrt.tpms <- t(tpms.mat[metagene_num,])

# Apply logistic transformation to metagenes
logistic.atrt.tpms <- apply(atrt.tpms,2,function(x){(1 / (1 + exp(-x)))}) 

# Present output as data frame for export
logistic.atrt.tpms <- as.data.frame(logistic.atrt.tpms)
data.frame(logistic.atrt.tpms)

# Projected results, map them back onto the seurat object
logistic.atrt.tpms -> brain.data2$logistic.atrt.tpms
as.numeric(tpms.mat[3,]) -> brain.data2$atrt

# Plot violin plots for each metagenes
eze_atrt_violinplot <- VlnPlot(brain.data2, features = "atrt", group.by = "Cell.Type")
eze_dimplot <- DimPlot(object = brain.data2, group.by = "Cell.Type", label = T)
eze_atrt_featureplot <- FeaturePlot(object = brain.data2,  "atrt", min.cutoff = 0, label = T)

ggsave(eze_atrt_featureplot, width = 10, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/FP_Projection.png")
ggsave(eze_atrt_violinplot, width = 13, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/VP_Projection.png")

#################### SUBGROUP PROJECTION ####################
# Extract the values for the projection
DefaultAssay(object = brain.data2) <- "RNA"

# Extract the normalised count data
tpms.mat <- brain.data2[["RNA"]]@scale.data

# Install and load libraries
library("NMF")
library("MASS")

# Load required data objects
nmf.res <- readRDS(file = "/home/raisaa/SeuratProject2/nmf.res.atrt.subgrp.rds")

# Load sample data as matrix object
source(file = "/home/raisaa/Group3-4App-main/StarProtocols_Guide/R/Project_NMF.R")

# Project NMF model to sequencing data
tpms.mat <- project.NMF(input.array = as.matrix(tpms.mat), nmf.result = nmf.res)

# Rows 3 in tpms.mat correspond to the ATRT metagene, extract them from the data and transpose matrix
atrt.tpms <- t(tpms.mat[c(1,2,3),]) 

# Apply logistic transformation to metagenes
logistic.atrt.tpms <- apply(atrt.tpms,2,function(x){(1 / (1 + exp(-x)))}) 

# Present output as data frame for export
logistic.atrt.tpms <- as.data.frame(logistic.atrt.tpms)
data.frame(logistic.atrt.tpms)

# Projected results, map them back onto the seurat object
logistic.atrt.tpms -> brain.data2$logistic.atrt.tpms
as.numeric(tpms.mat[3,]) -> brain.data2$SHH_metagene
as.numeric(tpms.mat[2,]) -> brain.data2$MYC_metagene
as.numeric(tpms.mat[1,]) -> brain.data2$TYR_metagene

# Plot violin plots for each metagenes
eze_atrt_violinplot <- VlnPlot(brain.data2, features = "atrt", group.by = "Cell.Type")
eze_dimplot <- DimPlot(object = brain.data2, group.by = "Cell.Type", label = T)
eze_atrt_featureplot <- FeaturePlot(object = brain.data2,  "atrt", min.cutoff = 0)

# Plot violin plots for each metagenes
eze_shh_violinplot <- VlnPlot(brain.data2, features = "SHH_metagene", group.by = "Cell.Type")
eze_myc_violinplot <- VlnPlot(brain.data2, features = "MYC_metagene" ,group.by = "Cell.Type")
eze_tyr_violinplot <- VlnPlot(brain.data2, features = "TYR_metagene" ,group.by = "Cell.Type")

eze_shh_featureplot <- FeaturePlot(object = brain.data2,  "SHH_metagene", cols = c("grey","green"), min.cutoff = 0, label = T)
eze_myc_featureplot <- FeaturePlot(object = brain.data2, "MYC_metagene", cols = c("grey","yellow"), min.cutoff = -1, max.cutoff = 0.1, label = T)
eze_tyr_featureplot <- FeaturePlot(object = brain.data2, "TYR_metagene", cols = c("grey","red"),min.cutoff=0, label = T)

ggsave(eze_shh_violinplot, width = 13, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/VP_shhProjection.png")
ggsave(eze_myc_violinplot, width = 13, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/VP_mycProjection.png")
ggsave(eze_tyr_violinplot, width = 13, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/VP_tyrProjection.png")
VP_All_Eze <- plot_grid(eze_shh_violinplot,eze_myc_violinplot,eze_tyr_violinplot, ncol=2, nrow=2, rel_widths = c(1,1.3)) +theme(legend.position = "right")
ggsave(VP_All_Eze,  width = 14, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/VP_All_Projection.png")

ggsave(eze_shh_featureplot, width = 10, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/FP_shhProjection.png")
ggsave(eze_myc_featureplot, width = 10, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/FP_mycProjection.png")
ggsave(eze_tyr_featureplot, width = 10, height = 11, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/FP_tyrProjection.png")
FP_All_Eze <- plot_grid(eze_shh_featureplot,eze_myc_featureplot,eze_tyr_featureplot,eze_dimplot, ncol=2, nrow=2) +theme(legend.position = "right")
ggsave(FP_All_Eze,  width = 14, height = 13, file="~/SeuratProject2/ATRT_Eze/Eze data analysis/Metagene projection/FP_All_Projection.png")
